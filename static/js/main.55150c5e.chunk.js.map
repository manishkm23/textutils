{"version":3,"sources":["component/Navbar.jsx","component/Textform.jsx","component/Alert.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","id","href","title","type","onClick","toggleMode","role","Textfrom","useState","text","setText","style","color","heading","cols","rows","backgroundColor","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","trim","split","join","navigator","clipboard","writeText","filter","element","Alert","height","alert","word","lower","charAt","slice","capitilize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55150c5e.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nexport default function Navbar(props)\r\n{\r\n    return(\r\n        <>\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} id=\"menu\">\r\n            <div className=\"container-fluid\">\r\n              <href className=\"navbar-brand\" href=\"#\">{props.title}</href>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a>\r\n                  </li>\r\n                  {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                  </li> */}\r\n                </ul>\r\n                <ul className=\"d-flex\" type=\"none\">\r\n                  <li><span className={`fa fa-sun-o p-2 text-${props.mode==='light'?'dark':'light'}`}></span></li>\r\n                  <li>\r\n                    <div className=\"form-check form-switch\">\r\n                      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                    </div>\r\n                  </li>\r\n                  <li><span className={`fa fa-moon-o text-${props.mode==='light'?'dark':'light'}`}></span></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </>\r\n    )\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function Textfrom(props) {\r\n    const handleUpclick=()=>\r\n    {\r\n       let newText=text.toUpperCase();\r\n       setText(newText);\r\n       props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleLowclick=()=>\r\n    {\r\n       let newText=text.toLowerCase();\r\n       setText(newText);\r\n       props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleResetclick=()=>\r\n    {\r\n       let newText='';\r\n       setText(newText);\r\n       props.showAlert(\"Text Cleared\",\"danger\");\r\n    }\r\n    const handleTrimclick=()=>\r\n    {\r\n       let newText=text.trim();\r\n       setText(newText);\r\n       props.showAlert(\"Text Trimmed\",\"success\");\r\n    }\r\n    const handleExtraSpaces=()=>\r\n    {\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extra Spaces\",\"success\");\r\n    }\r\n    const handleCopy=()=>\r\n    {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied\",\"success\");\r\n    }\r\n    const handleOnchange=(event)=>\r\n    {\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText]=useState('');\r\n    \r\n    return (<>\r\n        <div className='container my-3' style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>{props.heading}</h2>\r\n            <textarea cols=\"30\" rows=\"6\" style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#042743'}} className='form-control' value={text} onChange={handleOnchange} id='myText'></textarea><br/>\r\n            <button className=\"btn btn-primary m-1\" disabled={text.length===0} onClick={handleUpclick}>UPPERCASE</button>\r\n            <button className=\"btn btn-primary m-1\" disabled={text.length===0} onClick={handleLowclick}>lowercase</button>\r\n            <button className=\"btn btn-primary m-1\" disabled={text.length===0} onClick={handleTrimclick}>Trim Spaces</button>\r\n            <button className=\"btn btn-primary m-1\" disabled={text.length===0} onClick={handleExtraSpaces}>Remove Extraspace</button>\r\n            <button className=\"btn btn-primary m-1\" disabled={text.length===0} onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary m-1\" disabled={text.length===0} onClick={handleResetclick}>Reset</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h3>Your Text Summary</h3>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:\"Nothing to preview!!\"}</p>\r\n        </div>\r\n    </>)\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitilize=(word)=>\r\n    {\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (<div style={{height:'50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitilize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n    )\r\n}","import './App.css';\nimport Navbar from './component/Navbar';\nimport React, { useState } from 'react';\n// import About from './component/About';\nimport Textform from './component/Textform';\nimport Alert from './component/Alert';\n// import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>\n  {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    },1000);\n  }\n\n  const toggleMode=()=>\n  {\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been enabled\",\"success\")\n    }\n  }\n  return (<>\n  {/* <Router> */}\n    <Navbar title=\"TextUtils\"  mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {/* <Switch>\n          <Route exact path=\"/about\"> */}\n            {/* <About mode={mode}/> */}\n          {/* </Route>  */}\n          {/* <Route exact path=\"/\"> */}\n            <Textform heading=\"Enter some text below\" mode={mode} showAlert={showAlert}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n  {/* </Router> */}\n  </>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}